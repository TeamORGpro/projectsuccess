/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectsuccess;

import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.*;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import javax.swing.JFileChooser;

/**
 *
 * @author pc
 */
public class StdRegForm extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form regForm
     */
    ArrayList<String> name = new ArrayList<>();

    public StdRegForm() {
        initComponents();
        icon();
        closeconfirm();
        nextid();
        iconlabelLoad();
        batchAdd();
        txtStdID.setEnabled(false);
        getSubject();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public final void closeconfirm() {
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int reply = JOptionPane.showConfirmDialog(null,
                        "Really Quit ?", "Quit", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                } else {
                    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
                }

            }
        });
    }

    @SuppressWarnings("unchecked")

    public final void nextid() {
        Connection con1;
        con1 = DBConnect.connect();
        Statement s;
        try {
            s = con1.createStatement();

            try (ResultSet rs1 = s.executeQuery("SELECT AUTO_INCREMENT FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'successdb' AND TABLE_NAME= 'std_info_table';")) {

                rs1.next();
                txtStdID.setText(rs1.getString("AUTO_INCREMENT"));
                con1.close();
                s.close();
                rs1.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void batchAdd() {
        // add current year and 9 years to batch combo box
        java.util.Date d = new java.util.Date();

        SimpleDateFormat sdat = new SimpleDateFormat("yyyy-MM-dd");

        String dd = sdat.format(d).substring(0, 4);

        int realyr = Integer.parseInt(dd);

        for (int i = 0; i < 10; i++) {
            int olyr = realyr + i;
            String item = String.valueOf(olyr);
            batchYr.addItem(item);
        }
    }

    /*
    private void reset() {
        nextid();
        txtstdName.setText("");
        txtstdNameShort.setText("");
//        txtStdID.setText("");
        txtAddress.setText("");
        txtDob.setText("yyyy-mm-dd");
        txtDob.setForeground(new Color(153, 153, 153));
//        txtSubject.setText("");
        gradeCB.setSelectedItem("Grade 6");
        txtPhoneNo.setText("");
        cboxSex.setSelectedItem("Male");
        txtguardiansName.setText("");
        txtgphoneNo.setText("");
        txtStdID.setEnabled(false);

    }
     */
    public void getSubject() {
        Connection conS;
        conS = DBConnect.connect();
        ResultSet rsSubj;
        PreparedStatement psSubj;

        String query2 = "SELECT Subj_Name FROM tchr_info_table;";

        try {

            psSubj = conS.prepareStatement(query2);
            rsSubj = psSubj.executeQuery();
            while (rsSubj.next()) {
                String subjname = rsSubj.getString("Subj_Name");
                cbSubjects.addItem(subjname);
            }
            rsSubj.close();
            psSubj.close();
            conS.close();

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        stdName = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        dob = new javax.swing.JLabel();
        grade = new javax.swing.JLabel();
        phoneNo = new javax.swing.JLabel();
        sex = new javax.swing.JLabel();
        guardiansName = new javax.swing.JLabel();
        gPhoneNo = new javax.swing.JLabel();
        txtstdName = new javax.swing.JTextField();
        txtDob = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        txtguardiansName = new javax.swing.JTextField();
        txtgphoneNo = new javax.swing.JTextField();
        cboxSex = new javax.swing.JComboBox<>();
        createBtn = new javax.swing.JButton();
        cnslBtn = new javax.swing.JButton();
        registerTitle = new javax.swing.JLabel();
        registerIcn1 = new javax.swing.JLabel();
        stdNameShort = new javax.swing.JLabel();
        txtstdNameShort = new javax.swing.JTextField();
        newBtn = new javax.swing.JButton();
        txtAddress = new javax.swing.JTextField();
        stdID = new javax.swing.JLabel();
        txtStdID = new javax.swing.JTextField();
        gradeCB = new javax.swing.JComboBox<>();
        subjectLbl = new javax.swing.JLabel();
        batchName = new javax.swing.JLabel();
        batchYr = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstSubjects = new javax.swing.JList<>();
        cbSubjects = new javax.swing.JComboBox<>();
        listDelbtn = new javax.swing.JButton();

        jDialog1.setTitle("Massage");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student Register");
        setBounds(new java.awt.Rectangle(0, 0, 606, 550));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(606, 550));
        jPanel1.setPreferredSize(new java.awt.Dimension(606, 550));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stdName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        stdName.setText("Full Name :");
        stdName.setMaximumSize(new java.awt.Dimension(53, 14));
        stdName.setMinimumSize(new java.awt.Dimension(53, 14));
        jPanel1.add(stdName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        address.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        address.setText("Postal Address :");
        address.setMaximumSize(new java.awt.Dimension(78, 14));
        address.setMinimumSize(new java.awt.Dimension(78, 14));
        jPanel1.add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        dob.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        dob.setText("Date Of Birth :");
        dob.setMaximumSize(new java.awt.Dimension(70, 14));
        dob.setMinimumSize(new java.awt.Dimension(70, 14));
        jPanel1.add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        grade.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        grade.setText("Grade In School :");
        grade.setMaximumSize(new java.awt.Dimension(83, 14));
        grade.setMinimumSize(new java.awt.Dimension(83, 14));
        jPanel1.add(grade, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, -1, -1));

        phoneNo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        phoneNo.setText("Phone No. :");
        phoneNo.setMaximumSize(new java.awt.Dimension(57, 14));
        phoneNo.setMinimumSize(new java.awt.Dimension(57, 14));
        jPanel1.add(phoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, -1));

        sex.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sex.setText("Sex :");
        sex.setMaximumSize(new java.awt.Dimension(25, 14));
        sex.setMinimumSize(new java.awt.Dimension(25, 14));
        jPanel1.add(sex, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, -1, -1));

        guardiansName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        guardiansName.setText("Guardian's Name :");
        guardiansName.setMaximumSize(new java.awt.Dimension(87, 14));
        guardiansName.setMinimumSize(new java.awt.Dimension(87, 14));
        jPanel1.add(guardiansName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 540, -1, -1));

        gPhoneNo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        gPhoneNo.setText("His Or Her Phone  No. :");
        gPhoneNo.setMaximumSize(new java.awt.Dimension(108, 14));
        gPhoneNo.setMinimumSize(new java.awt.Dimension(108, 14));
        jPanel1.add(gPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 580, -1, -1));

        txtstdName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtstdName, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 57, 388, -1));

        txtDob.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtDob.setForeground(new java.awt.Color(153, 153, 153));
        txtDob.setText("yyyy-mm-dd");
        txtDob.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDobFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDobFocusLost(evt);
            }
        });
        txtDob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDobKeyTyped(evt);
            }
        });
        jPanel1.add(txtDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 217, 388, -1));

        txtPhoneNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPhoneNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneNoKeyTyped(evt);
            }
        });
        jPanel1.add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 460, 388, -1));

        txtguardiansName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtguardiansName, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 540, 388, -1));

        txtgphoneNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtgphoneNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgphoneNoKeyTyped(evt);
            }
        });
        jPanel1.add(txtgphoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 580, 388, -1));

        cboxSex.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboxSex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel1.add(cboxSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, 88, -1));

        createBtn.setBackground(new java.awt.Color(102, 255, 102));
        createBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        createBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/add-user.png"))); // NOI18N
        createBtn.setText("Save");
        createBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createBtn.setIconTextGap(5);
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });
        jPanel1.add(createBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 650, 100, 36));

        cnslBtn.setBackground(new java.awt.Color(255, 102, 102));
        cnslBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cnslBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/x.png"))); // NOI18N
        cnslBtn.setText("Cancel");
        cnslBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cnslBtn.setIconTextGap(7);
        cnslBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnslBtnActionPerformed(evt);
            }
        });
        jPanel1.add(cnslBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 650, 100, 36));

        registerTitle.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 24)); // NOI18N
        registerTitle.setText("Student Register Form");
        jPanel1.add(registerTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 11, -1, 35));
        jPanel1.add(registerIcn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 11, 40, 35));

        stdNameShort.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        stdNameShort.setText("Name With Initials :");
        stdNameShort.setMaximumSize(new java.awt.Dimension(53, 14));
        stdNameShort.setMinimumSize(new java.awt.Dimension(53, 14));
        jPanel1.add(stdNameShort, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        txtstdNameShort.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtstdNameShort, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 97, 388, -1));

        newBtn.setBackground(new java.awt.Color(255, 255, 153));
        newBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        newBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/new.png"))); // NOI18N
        newBtn.setText("New");
        newBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newBtn.setIconTextGap(6);
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });
        jPanel1.add(newBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 650, 100, 36));

        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 177, 388, -1));

        stdID.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        stdID.setText("Student ID :");
        stdID.setMaximumSize(new java.awt.Dimension(53, 14));
        stdID.setMinimumSize(new java.awt.Dimension(53, 14));
        jPanel1.add(stdID, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        txtStdID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtStdID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStdIDActionPerformed(evt);
            }
        });
        jPanel1.add(txtStdID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 137, 388, -1));

        gradeCB.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gradeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Grade 6", "Grade 7", "Grade 8", "Grade 9", "Grade 10", "Grade 11" }));
        jPanel1.add(gradeCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, 128, 25));

        subjectLbl.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        subjectLbl.setText("Subjects :");
        subjectLbl.setMaximumSize(new java.awt.Dimension(57, 14));
        subjectLbl.setMinimumSize(new java.awt.Dimension(57, 14));
        jPanel1.add(subjectLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 90, -1));

        batchName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        batchName.setText("Batch :");
        batchName.setMaximumSize(new java.awt.Dimension(108, 14));
        batchName.setMinimumSize(new java.awt.Dimension(108, 14));
        jPanel1.add(batchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 620, -1, -1));

        batchYr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Exam Year" }));
        jPanel1.add(batchYr, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 610, 140, 30));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("O/L Batch");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 620, 80, 20));

        lstSubjects.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lstSubjects.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " ", "Selected subjects will display here." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstSubjects);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 390, 90));

        cbSubjects.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Subject(s)" }));
        cbSubjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSubjectsActionPerformed(evt);
            }
        });
        jPanel1.add(cbSubjects, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 260, -1));

        listDelbtn.setBackground(new java.awt.Color(255, 255, 255));
        listDelbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/trash-bin.png"))); // NOI18N
        listDelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listDelbtnActionPerformed(evt);
            }
        });
        jPanel1.add(listDelbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 343, 40, 40));
        listDelbtn.setOpaque(false);
        listDelbtn.setContentAreaFilled(false);
        listDelbtn.setBorderPainted(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        // TODO add your handling code here:
//        reset();
        Window window = SwingUtilities.getWindowAncestor(newBtn);
        window.dispose();

        StdRegForm newWindow = new StdRegForm();
        newWindow.setVisible(true);
    }//GEN-LAST:event_newBtnActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed

        // validation part begins
        String v_name = txtstdName.getText().toLowerCase();
        String v_date = txtDob.getText();

        String qury = "SELECT * FROM `std_info_table` WHERE `Std_Name`='" + v_name + "' AND `DOB`='" + v_date + "';";

        //Make String from Listed Items 
        DefaultListModel<String> model = (DefaultListModel<String>) lstSubjects.getModel();
        int size = model.getSize();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < size; i++) {
            String item = model.getElementAt(i);
            sb.append(item);
            if (i < size - 1) {
                sb.append(", ");
            }
        }
        String result = sb.toString();

        //End Of making string from list items
        try {
            Connection stdVcon = DBConnect.connect();
            Statement stV = stdVcon.createStatement();
            ResultSet rsV = stV.executeQuery(qury);
            try {
                if (rsV.next() == true) {

//                    String s = rsV.getString("Std_Name").toLowerCase();
//                    String s1 = rsV.getString("DOB");
//
//                    System.out.println(s);
                    stdVcon.close();
                    stV.close();
                    rsV.close();

//            if (v_name.equals(s) && v_date.equals(s1)) {
//                System.out.println("Name match");
                    JOptionPane.showMessageDialog(null, "Hmm. looks like a student already in the institute", "Error!", JOptionPane.ERROR_MESSAGE);

//            }
                } else {

                    String Std_Name = txtstdName.getText();
                    String Name_with_Initials = txtstdNameShort.getText();
                    String Address = txtAddress.getText();
                    String DOB = txtDob.getText();
//                    String subject = txtSubject.getText();

                    String subject = result;

                    String Grade = (String) gradeCB.getSelectedItem();
                    String Phone_no = txtPhoneNo.getText();
                    String sex = (String) cboxSex.getSelectedItem();
                    String Grd_name = txtguardiansName.getText();
                    String Grd_Phone_no = txtgphoneNo.getText();
                    String batchyear = (String) batchYr.getSelectedItem();

                    // need validation part here
                    Connection con;
                    PreparedStatement pstmt;
                    con = DBConnect.connect();
                    if (!Std_Name.isEmpty() && !Name_with_Initials.isEmpty() && !Address.isEmpty() && !("yyyy-mm-dd".equals(DOB)) && !subject.isEmpty() && !Grade.isEmpty() && !sex.isEmpty() && !Grd_name.isEmpty() && !Grd_Phone_no.isEmpty() && !("Select Exam Year".equals(batchyear))) {

                        try {

                            String query = "insert into std_info_table(Std_Name,Name_with_Initials,Address,DOB,Subjects,Grade,Phone_no,sex,Grd_name,Grd_Phone_no,ol_yr)values(?,?,?,?,?,?,?,?,?,?,?)";

                            pstmt = con.prepareStatement(query);

                            pstmt.setString(1, Std_Name);
                            pstmt.setString(2, Name_with_Initials);
                            pstmt.setString(3, Address);
                            pstmt.setString(4, DOB);
                            pstmt.setString(5, subject);
                            pstmt.setString(6, Grade);
                            pstmt.setString(7, Phone_no);
                            pstmt.setString(8, sex);
                            pstmt.setString(9, Grd_name);
                            pstmt.setString(10, Grd_Phone_no);
                            pstmt.setString(11, batchyear);

                            pstmt.execute();
                            JOptionPane.showMessageDialog(null, "query successfully executed");

                            pstmt.close();
                            con.close();
                        } catch (SQLException e) {

                            if (e.getLocalizedMessage() == null ? "Data truncation: Incorrect date value: '" + DOB + "' for column `successdb`.`std_info_table`.`DOB` at row 1" == null : e.getLocalizedMessage().equals("Data truncation: Incorrect date value: '" + DOB + "' for column `successdb`.`std_info_table`.`DOB` at row 1")) {
                                JOptionPane.showMessageDialog(null, "Please enter right date format", "Error Occurred!", JOptionPane.ERROR_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(null, "Error :" + e.getMessage(), "Error Occurred!", JOptionPane.ERROR_MESSAGE);
                            }

                        }

//                      QR code Generate and Download code
                        try {
                            // Get the text from the text field
                            String qrText = txtStdID.getText();

                            // Generate the URL for the QR code image using the Google Charts API
                            String url = "https://chart.googleapis.com/chart?cht=qr&chl=" + qrText + "&chs=200x200";

                            // Show a file chooser dialog to let the user choose where to save the QR code image
                            JFileChooser fileChooser = new JFileChooser();

                            // Set a default file name and extension
                            String defaultFileName = "" + qrText + ".png";
                            fileChooser.setSelectedFile(new File(defaultFileName));

                            fileChooser.setDialogTitle("Save QR Code");
                            int userSelection = fileChooser.showSaveDialog(this);

                            if (userSelection == JFileChooser.APPROVE_OPTION) {
                                try {
                                    // Get the selected file and create a file output stream
                                    File fileToSave = fileChooser.getSelectedFile();
                                    FileOutputStream out = new FileOutputStream(fileToSave);

                                    // Open a connection to the URL and get the input stream
                                    URL qrCodeUrl = new URL(url);
                                    InputStream in = qrCodeUrl.openStream();

                                    // Write the image data to the selected file
                                    byte[] buffer = new byte[1024];
                                    int bytesRead;
                                    while ((bytesRead = in.read(buffer)) != -1) {
                                        out.write(buffer, 0, bytesRead);
                                    }

                                    // Close the input and output streams
                                    in.close();
                                    out.close();

//                                    System.out.println("QR code downloaded successfully");
                                    JOptionPane.showMessageDialog(this, "QR code downloaded successfully");
                                    newBtn.doClick();
                                } catch (IOException e) {
                                    e.printStackTrace();
//                                    JOptionPane.showMessageDialog(null, "There is a Probleme to download QR Code", "Error Occurred!", JOptionPane.ERROR_MESSAGE);
                                    JOptionPane.showMessageDialog(this, "Error downloading QR code: " + e.getMessage() + " error or internet error", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                        } catch (HeadlessException e) {
                            JOptionPane.showMessageDialog(null, "There is a Probleme to download QR Code", "Error Occurred!", JOptionPane.ERROR_MESSAGE);
                            e.getMessage();
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Please Fill the Required Fields", "Error Occurred!", JOptionPane.ERROR_MESSAGE);
                    }

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error :" + ex.getMessage() + "", "Error Occurred!", JOptionPane.ERROR_MESSAGE);

            }

        } catch (SQLException exc) {
            JOptionPane.showMessageDialog(null, "Error :" + exc.getMessage() + "", "Error Occurred!", JOptionPane.ERROR_MESSAGE);

        }

        // validation part ends

    }//GEN-LAST:event_createBtnActionPerformed


    private void cnslBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnslBtnActionPerformed

        int reply = JOptionPane.showConfirmDialog(null, "Really Quit ?", "Quit", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            this.dispose();
        }


    }//GEN-LAST:event_cnslBtnActionPerformed

    private void txtPhoneNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNoKeyTyped
        // Type only numbers

        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPhoneNoKeyTyped

    private void txtgphoneNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgphoneNoKeyTyped
        // Type only numbers

        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtgphoneNoKeyTyped

    private void txtDobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDobKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDobKeyTyped

    private void txtDobFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDobFocusGained
        // TODO add your handling code here:
        if (txtDob.getText().equals("yyyy-mm-dd")) {

            txtDob.setText("");
            txtDob.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtDobFocusGained

    private void txtDobFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDobFocusLost
        // TODO add your handling code here:
        if (txtDob.getText().equals("")) {

            txtDob.setText("yyyy-mm-dd");
            txtDob.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtDobFocusLost

    private void txtStdIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStdIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStdIDActionPerformed


    private void cbSubjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSubjectsActionPerformed
        // TODO add your handling code here:

        // Get the selected item from the JComboBox
        String selectedSubject = cbSubjects.getSelectedItem().toString();

        // Add the selected item to the JList
        if (!(lstSubjects.getModel() instanceof DefaultListModel)) {
            lstSubjects.setModel(new DefaultListModel());
        }
        DefaultListModel<String> model = (DefaultListModel<String>) lstSubjects.getModel();
        model.addElement(selectedSubject);
        lstSubjects.setModel(model);
    }//GEN-LAST:event_cbSubjectsActionPerformed

    private void listDelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listDelbtnActionPerformed
        int selectedIndex = lstSubjects.getSelectedIndex();
        if (selectedIndex != -1) {
            DefaultListModel<String> model = (DefaultListModel<String>) lstSubjects.getModel();
            String selectedItem = lstSubjects.getSelectedValue();
            model.removeElement(selectedItem);
            lstSubjects.repaint();
        }
    }//GEN-LAST:event_listDelbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StdRegForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StdRegForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StdRegForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StdRegForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new StdRegForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel address;
    private javax.swing.JLabel batchName;
    private javax.swing.JComboBox<String> batchYr;
    private javax.swing.JComboBox<String> cbSubjects;
    private javax.swing.JComboBox<String> cboxSex;
    private javax.swing.JButton cnslBtn;
    private javax.swing.JButton createBtn;
    private javax.swing.JLabel dob;
    private javax.swing.JLabel gPhoneNo;
    private javax.swing.JLabel grade;
    private javax.swing.JComboBox<String> gradeCB;
    private javax.swing.JLabel guardiansName;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton listDelbtn;
    private javax.swing.JList<String> lstSubjects;
    private javax.swing.JButton newBtn;
    private javax.swing.JLabel phoneNo;
    private javax.swing.JLabel registerIcn1;
    private javax.swing.JLabel registerTitle;
    private javax.swing.JLabel sex;
    private javax.swing.JLabel stdID;
    private javax.swing.JLabel stdName;
    private javax.swing.JLabel stdNameShort;
    private javax.swing.JLabel subjectLbl;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtStdID;
    private javax.swing.JTextField txtgphoneNo;
    private javax.swing.JTextField txtguardiansName;
    private javax.swing.JTextField txtstdName;
    private javax.swing.JTextField txtstdNameShort;
    // End of variables declaration//GEN-END:variables

    private void databaseName() {

        Connection con;
        con = DBConnect.connect();
        try {
            try (Statement st = con.createStatement()) {
                String sql = "SELECT * FROM tchr_info_table;";
                try (ResultSet rst = st.executeQuery(sql)) {
                    while (rst.next()) {
                        String Name = rst.getString("Subj_Name");
                        
                        name.add(Name);
                        
                    }
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error :" + e.getMessage(), "Error Occurred!", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void icon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/Project Icon.png")));
    }

    private void iconlabelLoad() {
        ImageIcon myImage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/regicon.png")));

        Image img1 = myImage.getImage();
        Image img2 = img1.getScaledInstance(registerIcn1.getWidth(), registerIcn1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);

        registerIcn1.setIcon(i);
    }

}
