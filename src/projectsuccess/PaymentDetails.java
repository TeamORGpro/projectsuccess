/*  259
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectsuccess;

import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public final class PaymentDetails extends javax.swing.JFrame {

    public PaymentDetails() {
        initComponents();
        icon();
        iconlabelLoad();

        closeconfirm();

        getSubject();
        dt();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void closeconfirm() {
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int reply = JOptionPane.showConfirmDialog(null,
                        "Really Quit ?", "Quit", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                } else {
                    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
                }

            }
        });
    }

    @SuppressWarnings("unchecked")

    public void dt() {
        java.util.Date d = new java.util.Date();

        SimpleDateFormat sdat = new SimpleDateFormat("yyyy-MM-dd");

        String dd = sdat.format(d);
        dateLbl.setText(dd);
    }

    public void lpaidMonth() throws SQLException {
        Connection con = DBConnect.connect();

        Statement stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT mycolumn FROM mytable WHERE id = 1");
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addpaymentDetails = new javax.swing.JPanel();
        lblMonth = new javax.swing.JLabel();
        txtstdID = new javax.swing.JTextField();
        stdName = new javax.swing.JLabel();
        pmntDetails = new javax.swing.JLabel();
        stdID = new javax.swing.JLabel();
        sbjName = new javax.swing.JLabel();
        grade = new javax.swing.JLabel();
        pmntFee = new javax.swing.JLabel();
        paymentIcn1 = new javax.swing.JLabel();
        monthCB = new javax.swing.JComboBox<>();
        createBtn = new javax.swing.JButton();
        newBtn = new javax.swing.JButton();
        cnslBtn = new javax.swing.JButton();
        searchBtn01 = new javax.swing.JButton();
        feeLbl = new javax.swing.JLabel();
        subCB = new javax.swing.JComboBox<>();
        lblstdName = new javax.swing.JLabel();
        attnDate = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        grdLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subj_tbl = new javax.swing.JTable();
        lblLpaidMonth = new javax.swing.JLabel();
        lblPdsubjects = new javax.swing.JLabel();
        lblLpdmonth = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pdSbjlist = new javax.swing.JList<>();
        lblAllsubjects = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        allEnrolledsbjlist = new javax.swing.JList<>();
        lblPayingsubjects = new javax.swing.JLabel();
        btnPrintSend = new javax.swing.JButton();
        cashAmount = new javax.swing.JLabel();
        txtCash = new javax.swing.JTextField();
        balanceAmount = new javax.swing.JLabel();
        balanceLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Payment Details");
        setBounds(new java.awt.Rectangle(0, 0, 486, 600));
        setResizable(false);

        addpaymentDetails.setBackground(new java.awt.Color(153, 204, 255));
        addpaymentDetails.setMinimumSize(new java.awt.Dimension(606, 459));
        addpaymentDetails.setPreferredSize(new java.awt.Dimension(605, 700));
        addpaymentDetails.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMonth.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMonth.setText("Paying Month :");
        lblMonth.setMaximumSize(new java.awt.Dimension(108, 14));
        lblMonth.setMinimumSize(new java.awt.Dimension(108, 14));
        addpaymentDetails.add(lblMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, 30));

        txtstdID.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtstdID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtstdIDKeyPressed(evt);
            }
        });
        addpaymentDetails.add(txtstdID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 220, 30));

        stdName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        stdName.setText("Student Name :");
        stdName.setMaximumSize(new java.awt.Dimension(53, 14));
        stdName.setMinimumSize(new java.awt.Dimension(53, 14));
        addpaymentDetails.add(stdName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, 30));

        pmntDetails.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 24)); // NOI18N
        pmntDetails.setText("Paymant Details");
        addpaymentDetails.add(pmntDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 16, -1, 35));

        stdID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        stdID.setText("Student ID :");
        addpaymentDetails.add(stdID, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 30));

        sbjName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sbjName.setText("Subject :");
        sbjName.setMaximumSize(new java.awt.Dimension(70, 14));
        sbjName.setMinimumSize(new java.awt.Dimension(70, 14));
        addpaymentDetails.add(sbjName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, 30));

        grade.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        grade.setText("Grade In School :");
        grade.setMaximumSize(new java.awt.Dimension(83, 14));
        grade.setMinimumSize(new java.awt.Dimension(83, 14));
        addpaymentDetails.add(grade, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, 30));

        pmntFee.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pmntFee.setText("Payment Fees (Rs) :");
        pmntFee.setMaximumSize(new java.awt.Dimension(57, 14));
        pmntFee.setMinimumSize(new java.awt.Dimension(57, 14));
        addpaymentDetails.add(pmntFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, 30));
        addpaymentDetails.add(paymentIcn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 16, 40, 35));

        monthCB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        monthCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        addpaymentDetails.add(monthCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 460, 128, 30));

        createBtn.setBackground(new java.awt.Color(102, 255, 102));
        createBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        createBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/create.png"))); // NOI18N
        createBtn.setText("Save");
        createBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createBtn.setIconTextGap(6);
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });
        addpaymentDetails.add(createBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 690, 100, 36));

        newBtn.setBackground(new java.awt.Color(255, 255, 153));
        newBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/new.png"))); // NOI18N
        newBtn.setText("New");
        newBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        newBtn.setIconTextGap(6);
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });
        addpaymentDetails.add(newBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 690, 100, 36));

        cnslBtn.setBackground(new java.awt.Color(255, 102, 102));
        cnslBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cnslBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/x.png"))); // NOI18N
        cnslBtn.setText("Cancel");
        cnslBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cnslBtn.setIconTextGap(7);
        cnslBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnslBtnActionPerformed(evt);
            }
        });
        addpaymentDetails.add(cnslBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 690, 105, 36));

        searchBtn01.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        searchBtn01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Search.png"))); // NOI18N
        searchBtn01.setText("Search");
        searchBtn01.setIconTextGap(5);
        searchBtn01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn01ActionPerformed(evt);
            }
        });
        addpaymentDetails.add(searchBtn01, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 100, 30));

        feeLbl.setBackground(new java.awt.Color(255, 255, 255));
        feeLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        feeLbl.setText("0.00");
        addpaymentDetails.add(feeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 520, 120, 30));

        subCB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        subCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Subjects" }));
        subCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subCBActionPerformed(evt);
            }
        });
        addpaymentDetails.add(subCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 340, 30));

        lblstdName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        addpaymentDetails.add(lblstdName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 357, 30));

        attnDate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        attnDate.setText("Date :");
        addpaymentDetails.add(attnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 20, 40, 30));

        dateLbl.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        addpaymentDetails.add(dateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 20, 90, 30));

        grdLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        addpaymentDetails.add(grdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 110, 30));

        subj_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject name", "Teacher Name", "Payments"
            }
        ));
        jScrollPane1.setViewportView(subj_tbl);

        addpaymentDetails.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 400, 300));

        lblLpaidMonth.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblLpaidMonth.setForeground(new java.awt.Color(0, 153, 153));
        lblLpaidMonth.setMaximumSize(new java.awt.Dimension(108, 14));
        lblLpaidMonth.setMinimumSize(new java.awt.Dimension(108, 14));
        addpaymentDetails.add(lblLpaidMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 110, 30));

        lblPdsubjects.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPdsubjects.setText("Paid Subjects :");
        lblPdsubjects.setMaximumSize(new java.awt.Dimension(108, 14));
        lblPdsubjects.setMinimumSize(new java.awt.Dimension(108, 14));
        addpaymentDetails.add(lblPdsubjects, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, 30));

        lblLpdmonth.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLpdmonth.setText("Last Paid Month :");
        lblLpdmonth.setMaximumSize(new java.awt.Dimension(108, 14));
        lblLpdmonth.setMinimumSize(new java.awt.Dimension(108, 14));
        addpaymentDetails.add(lblLpdmonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, 30));

        pdSbjlist.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pdSbjlist.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " ", "The subjects last paid by the student are listed here." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(pdSbjlist);

        addpaymentDetails.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 340, 100));

        lblAllsubjects.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAllsubjects.setText("All enrolled subjects :");
        lblAllsubjects.setMaximumSize(new java.awt.Dimension(108, 14));
        lblAllsubjects.setMinimumSize(new java.awt.Dimension(108, 14));
        addpaymentDetails.add(lblAllsubjects, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 430, -1, 30));

        allEnrolledsbjlist.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        allEnrolledsbjlist.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " ", "All the subjects in which the student is registered are listed here." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(allEnrolledsbjlist);

        addpaymentDetails.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, 400, 190));

        lblPayingsubjects.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPayingsubjects.setText("Paying subjects :");
        lblPayingsubjects.setMaximumSize(new java.awt.Dimension(108, 14));
        lblPayingsubjects.setMinimumSize(new java.awt.Dimension(108, 14));
        addpaymentDetails.add(lblPayingsubjects, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, -1, 30));

        btnPrintSend.setText("Print");
        btnPrintSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintSendActionPerformed(evt);
            }
        });
        addpaymentDetails.add(btnPrintSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 690, 100, 36));

        cashAmount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cashAmount.setText("Cash (Rs) :");
        cashAmount.setMaximumSize(new java.awt.Dimension(57, 14));
        cashAmount.setMinimumSize(new java.awt.Dimension(57, 14));
        addpaymentDetails.add(cashAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, -1, 30));

        txtCash.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCashKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCashKeyReleased(evt);
            }
        });
        addpaymentDetails.add(txtCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 570, 130, 30));

        balanceAmount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        balanceAmount.setText("Cash (Rs) :");
        balanceAmount.setMaximumSize(new java.awt.Dimension(57, 14));
        balanceAmount.setMinimumSize(new java.awt.Dimension(57, 14));
        addpaymentDetails.add(balanceAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 630, -1, 30));

        balanceLbl.setBackground(new java.awt.Color(255, 255, 255));
        balanceLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        balanceLbl.setText("0.00");
        addpaymentDetails.add(balanceLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 630, 120, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addpaymentDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addpaymentDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        // TODO add your handling code here:
        Window window = SwingUtilities.getWindowAncestor(newBtn);
        window.dispose();

        PaymentDetails newWindow = new PaymentDetails();
        newWindow.setVisible(true);

    }//GEN-LAST:event_newBtnActionPerformed

    private void cnslBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnslBtnActionPerformed
        // TODO add your handling code here:

        int reply = JOptionPane.showConfirmDialog(null,
                "Really Quit ?", "Quit", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            this.dispose();
        }


    }//GEN-LAST:event_cnslBtnActionPerformed


    private void searchBtn01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn01ActionPerformed
        // TODO add your handling code here:
        if ("".equals(txtstdID.getText())) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid Student ID");
        } else {
            Connection con;
            con = DBConnect.connect();
            ResultSet rs;
            PreparedStatement pstmt;
            String studentID = txtstdID.getText();
            lblLpaidMonth.setText("");
            try {
                pstmt = con.prepareStatement("SELECT * FROM std_info_table WHERE Std_ID = ?");
                pstmt.setString(1, studentID);
                rs = pstmt.executeQuery();

                if (rs.next()) {
                    String studentName = rs.getString("Std_Name");
                    lblstdName.setText(studentName);
                    String studentgrd = rs.getString("Grade");
                    grdLabel.setText(studentgrd);
                } else {
                    JOptionPane.showMessageDialog(null, "Please Enter Valid Student ID");
                    lblstdName.setText("");

                }

                pstmt.close();
                rs.close();
                con.close();

//            pstmt.close();
//            rs.close();
//            con.close();
            } catch (HeadlessException | SQLException e) {
                System.out.println(e.getMessage());
            }
            //            ---------------------------------------------------------------------------------------------------------- Code Again this OR rewrite the query
//old query
//            String query = "SELECT Subj_Names FROM payment_table WHERE Std_ID = '" + studentID + "' AND Date_paid = (SELECT MAX(Date_paid) FROM payment_table WHERE Std_ID = '" + studentID + "')";

//working query 1
            String query = "SELECT * FROM payment_table WHERE Std_ID = '" + studentID + "' AND Month = (SELECT MAX(Month) FROM payment_table WHERE Std_ID = '" + studentID + "') AND Year = (SELECT MAX(Year) FROM payment_table WHERE Std_ID = '" + studentID + "');";

//working query 2
//            String query =  "SELECT * FROM payment_table WHERE Std_ID = "+studentID+" AND (Month, Year) = ( SELECT Month, MAX(CAST(Year AS UNSIGNED)) FROM ( SELECT `Month`, `Year`, CAST(CONCAT(`Year`, LPAD(m.month_number, 2, '0'), '01') AS DATE) AS month_date FROM payment_table JOIN ( SELECT 'January' AS month_name, 1 AS month_number UNION SELECT 'February', 2 UNION SELECT 'March', 3 UNION SELECT 'April', 4 UNION SELECT 'May', 5 UNION SELECT 'June', 6 UNION SELECT 'July', 7 UNION SELECT 'August', 8 UNION SELECT 'September', 9 UNION SELECT 'October', 10 UNION SELECT 'November', 11 UNION SELECT 'December', 12 ) m ON m.month_name = payment_table.`Month` ) t WHERE Std_ID = "+studentID+" GROUP BY Month ORDER BY MAX(month_date) DESC LIMIT 1 );";
            try {
                Statement stmt1;
                ResultSet rs1;
                try (Connection con1 = DBConnect.connect()) {
                    stmt1 = con1.createStatement();
                    rs1 = stmt1.executeQuery(query);
                    DefaultListModel<String> model = new DefaultListModel<>();

                    while (rs1.next()) {
                        String[] subjects = rs1.getString("Subj_Names").split("\\s*,\\s*");
                        for (String subject : subjects) {
                            model.addElement(subject);
                        }

                        String lPaidMonth = rs1.getString("Month");
                        lblLpaidMonth.setText(lPaidMonth);
                    }
                    pdSbjlist.setModel(model);
                    stmt1.close();
                    rs1.close();
                    con1.close();
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }

//            ----------------------------------------------------------------------------------------------------------
            String query2 = "SELECT * FROM `std_info_table` WHERE `Std_ID` = " + studentID + ";";

            try {
                Statement stmt2;
                ResultSet rs2;
                try (Connection con2 = DBConnect.connect()) {
                    stmt2 = con2.createStatement();
                    rs2 = stmt2.executeQuery(query2);
                    DefaultListModel<String> model2 = new DefaultListModel<>();

                    while (rs2.next()) {
                        String[] subjects = rs2.getString("Subjects").split("\\s*,\\s*");
                        for (String subject : subjects) {
                            model2.addElement(subject);
                        }
                    }
                    allEnrolledsbjlist.setModel(model2);
                    stmt2.close();
                    rs2.close();
                    con2.close();

                }

            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_searchBtn01ActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:

        if (txtstdID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Fill the Required Fields", "Error Occurred!", JOptionPane.ERROR_MESSAGE);
        } else if ("Choose Subjects".equals(subCB)) {
            JOptionPane.showMessageDialog(null, "Please Fill the Required Fields", "Error Occurred!", JOptionPane.ERROR_MESSAGE);
        } else if ("0.00".equals(feeLbl.getText())) {
            JOptionPane.showMessageDialog(null, "Please Fill the Required Fields", "Error Occurred!", JOptionPane.ERROR_MESSAGE);
        } else {
            int Std_ID = Integer.parseInt(txtstdID.getText());
            String Std_Name = lblstdName.getText();

            //subject list edit
//            String subject = (String) subCB.getSelectedItem();
            DefaultTableModel model = (DefaultTableModel) subj_tbl.getModel();
            String values = "";
            for (int i = 0; i < model.getRowCount(); i++) {
                // Get the value of the column containing the multiple values
                Object valueObject = model.getValueAt(i, 0);

                // Cast the object to a string and add it to the concatenated string with a comma separator
                String value = (valueObject != null) ? valueObject.toString() : "";
                if (i == 0) {
                    values = value;
                } else {
                    values += ", " + value;
                }
            }
//            String subject=values;
            String grd = grdLabel.getText();
            String fee = feeLbl.getText();
            String mnth = (String) monthCB.getSelectedItem();
            String date = dateLbl.getText();
            String yr = dateLbl.getText().substring(0, 4);

//            if (!Std_Name.isEmpty() || "Choose Subjects".equals(subCB) ) {
            Connection con;
            con = DBConnect.connect();
            PreparedStatement pstmt3;

            try {

                String query = "insert into payment_table(Std_ID,Std_Name,Subj_Names,Payment_fee,Grade,Month,Date_paid,Year)values(?,?,?,?,?,?,?,?)";

                pstmt3 = con.prepareStatement(query);

                pstmt3.setInt(1, Std_ID);
                pstmt3.setString(2, Std_Name);
                pstmt3.setString(3, values);
                pstmt3.setString(4, fee);
                pstmt3.setString(5, grd);
                pstmt3.setString(6, mnth);
                pstmt3.setString(7, date);
                pstmt3.setString(8, yr);

                pstmt3.execute();
                JOptionPane.showMessageDialog(null, "Data successfully Saved!");

                pstmt3.close();
                con.close();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Please check your filled data! ", "Error Occurred!", JOptionPane.ERROR_MESSAGE);
            }
//            } else {
//                JOptionPane.showMessageDialog(null, "Please Fill Required Fields!", "Error Occured!", JOptionPane.ERROR_MESSAGE);
//            }
        }


    }//GEN-LAST:event_createBtnActionPerformed

    private void subCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subCBActionPerformed
        // TODO add your handling code here:
        Connection con;
        con = DBConnect.connect();
        ResultSet rs2;
        PreparedStatement pstmt2;
        try {
            String subject = (String) subCB.getSelectedItem();
            pstmt2 = con.prepareStatement("SELECT * FROM tchr_info_table WHERE Subj_Name = ?");
            pstmt2.setString(1, subject);
            rs2 = pstmt2.executeQuery();

            if (rs2.next()) {
                String subjectName = rs2.getString("Subj_Name");
                String TeacherName = rs2.getString("Tchr_Name");
                String paymentfee = rs2.getString("Payment_Fees");

                String[] columns1 = {subjectName, TeacherName, paymentfee};
                DefaultTableModel pmntTablemodel = (DefaultTableModel) subj_tbl.getModel();
                pmntTablemodel.addRow(columns1);

                int numRows = pmntTablemodel.getRowCount();
                double totalFees = 0.00;
                for (int i = 0; i < numRows; i++) {

                    Object value = pmntTablemodel.getValueAt(i, 2);
                    if (value instanceof String) {
                        try {
                            double doubleValue = Double.parseDouble((String) value);
                            totalFees += doubleValue;
                            DecimalFormat df = new DecimalFormat("0.00");
                            String totFee = df.format(totalFees);
                            feeLbl.setText(totFee);
                        } catch (NumberFormatException e) {
                            System.out.println(e.getMessage());
                        }
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Please Enter Valid Subject Name");
                feeLbl.setText("");
            }
            pstmt2.close();
            rs2.close();
            con.close();

        } catch (HeadlessException | SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_subCBActionPerformed

    private void txtstdIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtstdIDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            searchBtn01.doClick();

        }
    }//GEN-LAST:event_txtstdIDKeyPressed

    private void btnPrintSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintSendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintSendActionPerformed

    private void txtCashKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCashKeyPressed

    private void txtCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashKeyReleased
        // TODO add your handling code here:
        if (!txtCash.getText().isEmpty()) {
            double tot = Double.parseDouble(feeLbl.getText());
            double csh = Double.parseDouble(txtCash.getText());

            double bal = csh - tot;

            DecimalFormat df = new DecimalFormat("0.00");
            String fbal = df.format(bal);

            balanceLbl.setText(fbal);
        }


    }//GEN-LAST:event_txtCashKeyReleased

    public void getSubject() {
        Connection con;
        con = DBConnect.connect();
        ResultSet rsSub;
        PreparedStatement psSub;

        String query1 = "SELECT Subj_Name FROM tchr_info_table;";

        try {

            psSub = con.prepareStatement(query1);
            rsSub = psSub.executeQuery();
            while (rsSub.next()) {
                String subjname = rsSub.getString("Subj_Name");
                subCB.addItem(subjname);
            }
            rsSub.close();
            psSub.close();
            con.close();

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentDetails().setVisible(true);
            }
        });

//        jButton3.addActionListener(new java.awt.event.ActionListener() {
//            @Override
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                String name = JOptionPane.showInputDialog(parent,
//                        "What is your name?", null);
//            }
//        
//    }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addpaymentDetails;
    private javax.swing.JList<String> allEnrolledsbjlist;
    private javax.swing.JLabel attnDate;
    private javax.swing.JLabel balanceAmount;
    private javax.swing.JLabel balanceLbl;
    private javax.swing.JButton btnPrintSend;
    private javax.swing.JLabel cashAmount;
    private javax.swing.JButton cnslBtn;
    private javax.swing.JButton createBtn;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JLabel feeLbl;
    private javax.swing.JLabel grade;
    private javax.swing.JLabel grdLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAllsubjects;
    private javax.swing.JLabel lblLpaidMonth;
    private javax.swing.JLabel lblLpdmonth;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblPayingsubjects;
    private javax.swing.JLabel lblPdsubjects;
    private javax.swing.JLabel lblstdName;
    private javax.swing.JComboBox<String> monthCB;
    private javax.swing.JButton newBtn;
    private javax.swing.JLabel paymentIcn1;
    private javax.swing.JList<String> pdSbjlist;
    private javax.swing.JLabel pmntDetails;
    private javax.swing.JLabel pmntFee;
    private javax.swing.JLabel sbjName;
    private javax.swing.JButton searchBtn01;
    private javax.swing.JLabel stdID;
    private javax.swing.JLabel stdName;
    private javax.swing.JComboBox<String> subCB;
    private javax.swing.JTable subj_tbl;
    private javax.swing.JTextField txtCash;
    private javax.swing.JTextField txtstdID;
    // End of variables declaration//GEN-END:variables

    private void icon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/Project Icon.png")));
    }

    private void iconlabelLoad() {
        ImageIcon myImage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/paymentIcon.png")));

        Image img1 = myImage.getImage();
        Image img2 = img1.getScaledInstance(paymentIcn1.getWidth(), paymentIcn1.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);

        paymentIcn1.setIcon(i);
    }
}
